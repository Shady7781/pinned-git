#!/bin/bash

# Usage: put pinned-git in your PATH and alias git=pinned-git

GIT=/usr/bin/git
SELF="$(dirname "$(readlink -f -- "$0")")"
SHARE="$SELF/../share/pinned-git"
if [ -z "$SHARE" ]; then
	echo "Could not find share/pinned-git"
	exit 1
fi

#export GIT_CURL_VERBOSE=1

# Absolutely necessary to avoid MITM with Apple-patched OpenSSL
# https://hynek.me/articles/apple-openssl-verification-surprises/
export OPENSSL_X509_TEA_DISABLE=1

do-pinned-git() {
  local cmd=$1
  shift
  local cert_name=$1
  shift
  exec "$GIT" "$cmd" --config "http.sslcapath=$SHARE/empty-dir" --config "http.sslcainfo=$SHARE/certs/${cert_name}.crt" "$@"
}

args=("$@")
cmd="$1"
shift
if [[ "$cmd" == "clone" || "$cmd" == "cl" || "$cmd" == "ls-remote" ]]; then
  if [[ "$*" == *https://github.com/* ]]; then
    do-pinned-git "$cmd" github.com "$@"

  elif [[ "$*" == *https://gitlab.com/* ]]; then
    do-pinned-git "$cmd" gitlab.com "$@"

  elif [[ "$*" == *https://anonscm.debian.org/* ]]; then
    do-pinned-git "$cmd" anonscm.debian.org "$@"

  elif [[ "$*" == *https://git.kernel.org/* ]]; then
    do-pinned-git "$cmd" git.kernel.org "$@"

  elif [[ "$*" == *https://repo.or.cz/* ]]; then
    do-pinned-git "$cmd" repo.or.cz "$@"

  else
    exec "$GIT" "${args[@]}"
  fi
else
  exec "$GIT" "${args[@]}"
fi
